name: World Service Pipeline

on:
  push:
    branches:
      - machine_learning
      - ui_back
      - main
      - dev
      - feature1
    paths:
      - 'pfm_services/helloworld_ms_project/**'

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/helloworldms
  CONTEXT: pfm_services/helloworld_ms_project/helloworld_ms/

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest

    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: '7.x'
      - name: Restore Dependencies
        run: dotnet restore pfm_services/helloworld_ms_project/Tests
      - name: Test
        run: dotnet test pfm_services/helloworld_ms_project/Tests --configuration Release

      - name: Set up QEMU
        if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v3

      - name: Docker Login
        if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main'
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5.1.0
        with:
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ github.ref == 'refs/heads/dev' && 'dev' || github.ref == 'refs/heads/main' && 'prod' || 'latest' }}
          context: ${{ env.CONTEXT }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"SalaheddinesKey" /o:"salaheddines" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
